{
    "collab_server" : "",
    "contents" : "\n#' Function to time operation and print start and finish message\n#'\n#' @param expr an object to be evaluated and timed.\n#' @param msg string. A message to be printed\n#' @return prints out message and time of process. Returns the result of expr\n#' @examples timeIt({sum(rnorm(1000))}, 'Processing...')\n#' @author Henrique Cabral\n#' @export\ntimeIt <- function(expr, msg) {\n    # print message\n    print(msg)\n\n    # register starting time\n    st <- Sys.time()\n\n    # evaluate expression\n    x <- eval(expr)\n\n    # get time difference\n    t_diff <- as.numeric(difftime(Sys.time(), st, units = 'secs'))\n\n    # if more than a minute, get time diff in minutes\n    if (t_diff > 60) {\n        t_diff <- as.numeric(difftime(Sys.time(), st, units = 'mins'))\n        t_unit <- 'minutes'\n    } else {\n        t_unit <- 'seconds'\n    }\n\n    # print done message with time\n    print(sprintf('Done in %0.2f %s', t_diff, t_unit))\n    return(x)\n}\n",
    "created" : 1484821667848.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3553974787",
    "id" : "A0883E06",
    "lastKnownWriteTime" : 1485957770,
    "last_content_update" : 1485957770287,
    "path" : "~/R/QPV_utils/R/utils.R",
    "project_path" : "R/utils.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}